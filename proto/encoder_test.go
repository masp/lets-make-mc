package proto

import (
	"bytes"
	"fmt"
	"testing"
)

func TestPacketEncoder_WriteVar64(t *testing.T) {
	tests := []struct {
		want []byte
		v    int64
	}{
		{[]byte{0x00}, 0},
		{[]byte{0x01}, 1},
		{[]byte{0x02}, 2},
		{[]byte{0x7f}, 127},
		{[]byte{0x80, 0x01}, 128},
		{[]byte{0xff, 0x01}, 255},
		{[]byte{0xff, 0xff, 0xff, 0xff, 0x07}, 2147483647},
		{[]byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f}, 9223372036854775807},
		{[]byte{0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01}, -1},
		{[]byte{0x80, 0x80, 0x80, 0x80, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01}, -2147483648},
		{[]byte{0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x01}, -9223372036854775808},
	}

	for _, tt := range tests {
		t.Run(fmt.Sprintf("WriteVar64(%d)", tt.v), func(t *testing.T) {
			var b bytes.Buffer
			e := NewEncoder(&b)
			e.WriteVar64(tt.v)
			if !bytes.Equal(b.Bytes(), tt.want) {
				t.Errorf("got %v; want %v", b.Bytes(), tt.want)
			}
		})
	}
}
